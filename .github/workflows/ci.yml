name: Tests and CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        bun-version: [latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ matrix.bun-version }}

    - name: Install dependencies
      run: bun install

    - name: Generate Prisma Client
      run: bunx prisma generate

    - name: Run type checking
      run: bunx tsc --noEmit

    - name: Run tests
      run: bun test

    - name: Run tests with coverage
      run: bun test --coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Check code formatting
      run: bunx prettier --check "src/**/*.{ts,js,json}"

    - name: Run ESLint (if configured)
      run: echo "ESLint check - configure if needed"
      # run: bunx eslint src/ --ext .ts,.js

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Generate Prisma Client
      run: bunx prisma generate

    - name: Build TypeScript
      run: bunx tsc --build

    - name: Test build
      run: echo "Build successful"